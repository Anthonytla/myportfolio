{"remainingRequest":"C:\\Users\\thanh\\OneDrive\\Documents\\group-865773\\myportfolio\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\thanh\\OneDrive\\Documents\\group-865773\\myportfolio\\frontend\\src\\components\\ExperiencesListBack.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\thanh\\OneDrive\\Documents\\group-865773\\myportfolio\\frontend\\src\\components\\ExperiencesListBack.vue","mtime":1620757498119},{"path":"C:\\Users\\thanh\\OneDrive\\Documents\\group-865773\\myportfolio\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thanh\\OneDrive\\Documents\\group-865773\\myportfolio\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\thanh\\OneDrive\\Documents\\group-865773\\myportfolio\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thanh\\OneDrive\\Documents\\group-865773\\myportfolio\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRXhwZXJpZW5jZVNlcnZpY2UgZnJvbSAiLi4vc2VydmljZXMvZXhwZXJpZW5jZVNlcnZpY2UiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJleHBlcmllbmNlcy1saXN0IiwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZXhwZXJpZW5jZXM6IFtdLA0KICAgICAgY3VycmVudEV4cGVyaWVuY2U6IG51bGwsDQogICAgICBjdXJyZW50SW5kZXg6IC0xLA0KICAgICAgdGl0bGU6ICIiLA0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICByZXRyaWV2ZUV4cGVyaWVuY2VzKCkgew0KICAgICAgRXhwZXJpZW5jZVNlcnZpY2UuZ2V0QWxsKCkNCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQogICAgICAgICAgdGhpcy5leHBlcmllbmNlcyA9IHJlc3BvbnNlLmRhdGE7DQogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaCgoZSkgPT4gew0KICAgICAgICAgIGNvbnNvbGUubG9nKGUpOw0KICAgICAgICB9KTsNCiAgICB9LA0KDQogICAgcmVmcmVzaExpc3QoKSB7DQogICAgICB0aGlzLnJldHJpZXZlVHV0b3JpYWxzKCk7DQogICAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbCA9IG51bGw7DQogICAgICB0aGlzLmN1cnJlbnRJbmRleCA9IC0xOw0KICAgIH0sDQoNCiAgICBzZXRBY3RpdmVFeHBlcmllbmNlKGV4cGVyaWVuY2UsIGluZGV4KSB7DQogICAgICB0aGlzLmN1cnJlbnRFeHBlcmllbmNlID0gZXhwZXJpZW5jZTsNCiAgICAgIHRoaXMuY3VycmVudEluZGV4ID0gaW5kZXg7DQogICAgfSwNCg0KICAgIHJlbW92ZUFsbEV4cGVyaWVuY2VzKCkgew0KICAgICAgRXhwZXJpZW5jZVNlcnZpY2UuZGVsZXRlQWxsKCkNCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7DQogICAgICAgICAgdGhpcy5yZWZyZXNoTGlzdCgpOw0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goKGUpID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsNCiAgICAgICAgfSk7DQogICAgfSwNCg0KICAgIHNlYXJjaFRpdGxlKCkgew0KICAgICAgRXhwZXJpZW5jZVNlcnZpY2UuZmluZEJ5VGl0bGUodGhpcy50aXRsZSkNCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQogICAgICAgICAgdGhpcy5leHBlcmllbmNlcyA9IHJlc3BvbnNlLmRhdGE7DQogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaCgoZSkgPT4gew0KICAgICAgICAgIGNvbnNvbGUubG9nKGUpOw0KICAgICAgICB9KTsNCiAgICB9LA0KDQogICAgY2hlY2tFeHBlcmllbmNlcygpIHsNCiAgICAgICQoImlucHV0IikuZWFjaChmdW5jdGlvbiAoKSB7DQogICAgICAgIGlmICgkKHRoaXMpLmlzKCI6Y2hlY2tlZCIpKSB7DQogICAgICAgICAgRXhwZXJpZW5jZVNlcnZpY2UudXBkYXRlKCQodGhpcykuYXR0cigiaWQiKSwgeyBub3Rfc2hvd246IHRydWUgfSk7DQogICAgICAgICAgJCh0aGlzKS5hdHRyKCJjaGVja2VkIiwgIjpjaGVja2VkIik7DQogICAgICAgIH0gZWxzZSBFeHBlcmllbmNlU2VydmljZS51cGRhdGUoJCh0aGlzKS5hdHRyKCJpZCIpLCB7IG5vdF9zaG93bjogZmFsc2UgfSk7DQogICAgICB9KTsNCiAgICB9LA0KDQogICAgY2hlY2tib3hlcygpIHsNCiAgICAgIGZvciAoY29uc3QgaSBvZiB0aGlzLmV4cGVyaWVuY2VzKSB7DQogICAgICAgIGlmIChpLm5vdF9zaG93bikgew0KICAgICAgICAgIHZhciBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGkuX2lkKTsNCiAgICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoImNoZWNrZWQiLCAiY2hlY2tlZCIpOw0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLnJldHJpZXZlRXhwZXJpZW5jZXMoKTsNCiAgfSwNCg0KICB1cGRhdGVkKCkgew0KICAgIHRoaXMuY2hlY2tib3hlcygpOw0KICB9DQp9Ow0K"},{"version":3,"sources":["ExperiencesListBack.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ExperiencesListBack.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"list row\">\r\n    <div class=\"col-md-6\">\r\n      <h4>Experiences List</h4>\r\n      <form v-on:submit=\"checkExperiences\">\r\n        <ul class=\"list-group\">\r\n          <li\r\n            class=\"list-group-item\"\r\n            :class=\"{ active: index == currentIndex }\"\r\n            v-for=\"(experience, index) in experiences\"\r\n            :key=\"index\"\r\n            @click=\"setActiveExperience(experience, index)\"\r\n          >\r\n            <input type=\"checkbox\" :id=\"experience._id\" />\r\n            <label :for=\"experience._id\"></label> {{ experience.title }}\r\n          </li>\r\n        </ul>\r\n        <button class=\"m-3 btn btn-sm btn-danger\">Submit checkbox</button>\r\n      </form>\r\n\r\n      <a class=\"m-3 btn btn-sm btn-danger\" href=\"/add\"> Add Experience</a>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div v-if=\"currentExperience\">\r\n        <h4>Experience</h4>\r\n        <div>\r\n          <label :for=\"currentExperience._id\"><strong>Title:</strong></label>\r\n          {{ currentExperience.title }}\r\n        </div>\r\n        <div>\r\n          <label><strong>Description:</strong></label>\r\n          {{ currentExperience.description }}\r\n        </div>\r\n        <div>\r\n          <img :src=\"currentExperience.img\" />\r\n        </div>\r\n\r\n        <a\r\n          class=\"badge badge-warning\"\r\n          :href=\"'/experiences/' + currentExperience._id\"\r\n        >\r\n          Edit\r\n        </a>\r\n        <a\r\n          class=\"badge badge-warning\"\r\n          :href=\"'/tasks/' + currentExperience._id\"\r\n        >\r\n          Add task\r\n        </a>\r\n      </div>\r\n      <div v-else>\r\n        <br />\r\n        <div>Please click on a Experience...</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"\r\n    integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\r\n    crossorigin=\"anonymous\"></script>\r\n\r\n<script>\r\nimport ExperienceService from \"../services/experienceService\";\r\n\r\nexport default {\r\n  name: \"experiences-list\",\r\n  data() {\r\n    return {\r\n      experiences: [],\r\n      currentExperience: null,\r\n      currentIndex: -1,\r\n      title: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    retrieveExperiences() {\r\n      ExperienceService.getAll()\r\n        .then((response) => {\r\n          this.experiences = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    refreshList() {\r\n      this.retrieveTutorials();\r\n      this.currentTutorial = null;\r\n      this.currentIndex = -1;\r\n    },\r\n\r\n    setActiveExperience(experience, index) {\r\n      this.currentExperience = experience;\r\n      this.currentIndex = index;\r\n    },\r\n\r\n    removeAllExperiences() {\r\n      ExperienceService.deleteAll()\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          this.refreshList();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    searchTitle() {\r\n      ExperienceService.findByTitle(this.title)\r\n        .then((response) => {\r\n          this.experiences = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    checkExperiences() {\r\n      $(\"input\").each(function () {\r\n        if ($(this).is(\":checked\")) {\r\n          ExperienceService.update($(this).attr(\"id\"), { not_shown: true });\r\n          $(this).attr(\"checked\", \":checked\");\r\n        } else ExperienceService.update($(this).attr(\"id\"), { not_shown: false });\r\n      });\r\n    },\r\n\r\n    checkboxes() {\r\n      for (const i of this.experiences) {\r\n        if (i.not_shown) {\r\n          var input = document.getElementById(i._id);\r\n          input.setAttribute(\"checked\", \"checked\");\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.retrieveExperiences();\r\n  },\r\n\r\n  updated() {\r\n    this.checkboxes();\r\n  }\r\n};\r\n</script>\r\n"]}]}