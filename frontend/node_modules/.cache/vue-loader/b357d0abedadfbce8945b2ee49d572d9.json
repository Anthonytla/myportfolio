{"remainingRequest":"C:\\Users\\thanh\\Documents\\portfolio_bis\\vuecrudaaapi\\vue-js-client-crud\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\thanh\\Documents\\portfolio_bis\\vuecrudaaapi\\vue-js-client-crud\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\thanh\\Documents\\portfolio_bis\\vuecrudaaapi\\vue-js-client-crud\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\thanh\\Documents\\portfolio_bis\\vuecrudaaapi\\vue-js-client-crud\\src\\App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"C:\\Users\\thanh\\Documents\\portfolio_bis\\vuecrudaaapi\\vue-js-client-crud\\src\\App.vue","mtime":1620740691537},{"path":"C:\\Users\\thanh\\Documents\\portfolio_bis\\vuecrudaaapi\\vue-js-client-crud\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thanh\\Documents\\portfolio_bis\\vuecrudaaapi\\vue-js-client-crud\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\thanh\\Documents\\portfolio_bis\\vuecrudaaapi\\vue-js-client-crud\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\thanh\\Documents\\portfolio_bis\\vuecrudaaapi\\vue-js-client-crud\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}